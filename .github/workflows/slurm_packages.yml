name: Build slurm packages

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build for ${{ matrix.distribution }}-${{ matrix.platform }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        slurm:
          - version: 25.05.2
        platform:
         - linux/amd64
        distribution:
         - deb11
         - deb13
        include:
          - distribution: deb11
            base_image: debian:bullseye
            openmpi:
              version: 1.13
            libjwt:
              package_name: libjwt0
          - distribution: deb13
            base_image: debian:trixie
            openmpi:
              version: 1.18
            libjwt:
              package_name: libjwt2

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Get short commit hash
        run: echo "SHORT_SHA=$(git rev-parse --short=8 HEAD)" >> $GITHUB_ENV

      - name: Build docker images
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          file: Dockerfile
          push: false
          tags: slurm_packages:${{ matrix.slurm.version }}-${{ env.SHORT_SHA }}
          platforms: ${{ matrix.platform }}
          load: true
          build-args: |
            BASE_IMAGE=${{ matrix.base_image }}
            SLURM_VERSION=${{ matrix.slurm.version }}
            OPENMPI_VERSION=${{ matrix.openmpi.version }}
            LIBJWT=${{ matrix.libjwt.package_name }}
          cache-from: type=local,src=.buildx-cache
          cache-to: type=local,dest=.buildx-cache,mode=max

      - name: Create slurm_packages_output directory
        run: mkdir -p slurm_packages_output

      - name: Run Docker container and copy files
        run: |
          container_id=$(docker create slurm_packages:${{ matrix.slurm.version }}-${{ env.SHORT_SHA }})
          docker start $container_id
          docker cp $container_id:/usr/src/debs/ ./slurm_packages_output/
          docker stop $container_id
          docker rm $container_id

      - name: Cleanup
        run: rm -rf slurm_packages_output/*.deb
